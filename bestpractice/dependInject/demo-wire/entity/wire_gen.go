// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package entity

// Injectors from user.go:

/*
上述代码中，首先定义了自定义类型 Name 和 PublicAccount 以及结构体类型 User，
并分别提供了 Name 和 PublicAccount 的初始化函数（providers）。
然后定义一个注入器（injectors）InitializeUser，用于构造连接提供者并构造 *User 实例。
*/
func InitializeUser() *User {
	name := NewName()
	publicAccount := NewPublicAccount()
	user := &User{
		MyName:          name,
		MyPublicAccount: publicAccount,
	}
	return user
}

// 绑定值
func InjectUser() User {
	user := _wireUserValue
	return user
}

var (
	_wireUserValue = User{
		MyName:          "yongwww",
		MyPublicAccount: "ggg",
	}
)

// user.go:

type Name string

func NewName() Name {
	return "AAA"
}

type PublicAccount string

func NewPublicAccount() PublicAccount {
	return "ggggg"
}

type User struct {
	MyName          Name
	MyPublicAccount PublicAccount
}
