// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.1
// source: idl/expert/expert.proto

package expert

import (
	context "context"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	errs "kdemo/kitex_gen/biz/model/errs"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 要执行请求的类型枚举值
type QuestionSearchReqBody_Request int32

const (
	// 未知
	QuestionSearchReqBody_UNKNOWN_REQUEST QuestionSearchReqBody_Request = 0
	// 使用 http client 执行请求
	QuestionSearchReqBody_HTTP QuestionSearchReqBody_Request = 1
	// 使用 chrome 执行请求
	QuestionSearchReqBody_CHROME QuestionSearchReqBody_Request = 2
	// 由服务来判断执行请求的类型
	QuestionSearchReqBody_SMART QuestionSearchReqBody_Request = 3
	// 按照PDF格式执行请求
	QuestionSearchReqBody_PDF QuestionSearchReqBody_Request = 4
	// 自定义请求类型
	QuestionSearchReqBody_CUSTOM QuestionSearchReqBody_Request = 100
)

// Enum value maps for QuestionSearchReqBody_Request.
var (
	QuestionSearchReqBody_Request_name = map[int32]string{
		0:   "UNKNOWN_REQUEST",
		1:   "HTTP",
		2:   "CHROME",
		3:   "SMART",
		4:   "PDF",
		100: "CUSTOM",
	}
	QuestionSearchReqBody_Request_value = map[string]int32{
		"UNKNOWN_REQUEST": 0,
		"HTTP":            1,
		"CHROME":          2,
		"SMART":           3,
		"PDF":             4,
		"CUSTOM":          100,
	}
)

func (x QuestionSearchReqBody_Request) Enum() *QuestionSearchReqBody_Request {
	p := new(QuestionSearchReqBody_Request)
	*p = x
	return p
}

func (x QuestionSearchReqBody_Request) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuestionSearchReqBody_Request) Descriptor() protoreflect.EnumDescriptor {
	return file_idl_expert_expert_proto_enumTypes[0].Descriptor()
}

func (QuestionSearchReqBody_Request) Type() protoreflect.EnumType {
	return &file_idl_expert_expert_proto_enumTypes[0]
}

func (x QuestionSearchReqBody_Request) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuestionSearchReqBody_Request.Descriptor instead.
func (QuestionSearchReqBody_Request) EnumDescriptor() ([]byte, []int) {
	return file_idl_expert_expert_proto_rawDescGZIP(), []int{2, 0}
}

// 返回结果内容的格式枚举值
type QuestionSearchReqBody_ReturnFormat int32

const (
	// 未知
	QuestionSearchReqBody_UNKNOWN_FORMAT QuestionSearchReqBody_ReturnFormat = 0
	// 网站原始返回格式
	QuestionSearchReqBody_RAW QuestionSearchReqBody_ReturnFormat = 1
	// 纯文本格式
	QuestionSearchReqBody_PLAIN QuestionSearchReqBody_ReturnFormat = 2
	// markdown
	QuestionSearchReqBody_MARKDOWN QuestionSearchReqBody_ReturnFormat = 3
	// markdown_lingxi
	QuestionSearchReqBody_MARKDOWN_LINGXI QuestionSearchReqBody_ReturnFormat = 4
)

// Enum value maps for QuestionSearchReqBody_ReturnFormat.
var (
	QuestionSearchReqBody_ReturnFormat_name = map[int32]string{
		0: "UNKNOWN_FORMAT",
		1: "RAW",
		2: "PLAIN",
		3: "MARKDOWN",
		4: "MARKDOWN_LINGXI",
	}
	QuestionSearchReqBody_ReturnFormat_value = map[string]int32{
		"UNKNOWN_FORMAT":  0,
		"RAW":             1,
		"PLAIN":           2,
		"MARKDOWN":        3,
		"MARKDOWN_LINGXI": 4,
	}
)

func (x QuestionSearchReqBody_ReturnFormat) Enum() *QuestionSearchReqBody_ReturnFormat {
	p := new(QuestionSearchReqBody_ReturnFormat)
	*p = x
	return p
}

func (x QuestionSearchReqBody_ReturnFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuestionSearchReqBody_ReturnFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_idl_expert_expert_proto_enumTypes[1].Descriptor()
}

func (QuestionSearchReqBody_ReturnFormat) Type() protoreflect.EnumType {
	return &file_idl_expert_expert_proto_enumTypes[1]
}

func (x QuestionSearchReqBody_ReturnFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuestionSearchReqBody_ReturnFormat.Descriptor instead.
func (QuestionSearchReqBody_ReturnFormat) EnumDescriptor() ([]byte, []int) {
	return file_idl_expert_expert_proto_rawDescGZIP(), []int{2, 1}
}

type HelloReqBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 名字
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *HelloReqBody) Reset() {
	*x = HelloReqBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_expert_expert_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloReqBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloReqBody) ProtoMessage() {}

func (x *HelloReqBody) ProtoReflect() protoreflect.Message {
	mi := &file_idl_expert_expert_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloReqBody.ProtoReflect.Descriptor instead.
func (*HelloReqBody) Descriptor() ([]byte, []int) {
	return file_idl_expert_expert_proto_rawDescGZIP(), []int{0}
}

func (x *HelloReqBody) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type HelloRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 欢迎信息
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *HelloRes) Reset() {
	*x = HelloRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_expert_expert_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloRes) ProtoMessage() {}

func (x *HelloRes) ProtoReflect() protoreflect.Message {
	mi := &file_idl_expert_expert_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloRes.ProtoReflect.Descriptor instead.
func (*HelloRes) Descriptor() ([]byte, []int) {
	return file_idl_expert_expert_proto_rawDescGZIP(), []int{1}
}

func (x *HelloRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 问题搜索请求信息
type QuestionSearchReqBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 要抓取的 URI 资源
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// ?要执行请求的类型，默认值是 http
	Request string `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	// ?提炼可读性内容，仅支持 return_format=plain 的场景，默认值是 false
	Readability bool `protobuf:"varint,3,opt,name=readability,proto3" json:"readability,omitempty"`
	// ?返回结果内容的格式，默认值是 raw
	ReturnFormat string `protobuf:"bytes,4,opt,name=return_format,json=returnFormat,proto3" json:"return_format,omitempty"`
	// ?自定义请求类型的额外参数
	CustomExt string `protobuf:"bytes,5,opt,name=custom_ext,json=customExt,proto3" json:"custom_ext,omitempty"`
	// ?是否返回网站的 favicon，默认值是 false
	WithFavicon bool `protobuf:"varint,6,opt,name=with_favicon,json=withFavicon,proto3" json:"with_favicon,omitempty"`
	// 要抓取的 URI 资源数组，和 url 参数二选一，数量上限是30
	Urls []string `protobuf:"bytes,7,rep,name=urls,proto3" json:"urls,omitempty"`
	// ?是否缓存图片至OSS，默认值是 false
	EnableImageCache bool `protobuf:"varint,8,opt,name=enable_image_cache,json=enableImageCache,proto3" json:"enable_image_cache,omitempty"`
	// ?是否使用新的提取器，默认值是 false
	WithReExtractor bool `protobuf:"varint,9,opt,name=with_re_extractor,json=withReExtractor,proto3" json:"with_re_extractor,omitempty"`
	// ?是否使用新的适配器，默认值是 false
	WithReAdapter bool `protobuf:"varint,10,opt,name=with_re_adapter,json=withReAdapter,proto3" json:"with_re_adapter,omitempty"`
	// ?是否不读缓存结果，默认值是false
	Nocache bool `protobuf:"varint,11,opt,name=nocache,proto3" json:"nocache,omitempty"`
}

func (x *QuestionSearchReqBody) Reset() {
	*x = QuestionSearchReqBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_expert_expert_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionSearchReqBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionSearchReqBody) ProtoMessage() {}

func (x *QuestionSearchReqBody) ProtoReflect() protoreflect.Message {
	mi := &file_idl_expert_expert_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionSearchReqBody.ProtoReflect.Descriptor instead.
func (*QuestionSearchReqBody) Descriptor() ([]byte, []int) {
	return file_idl_expert_expert_proto_rawDescGZIP(), []int{2}
}

func (x *QuestionSearchReqBody) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *QuestionSearchReqBody) GetRequest() string {
	if x != nil {
		return x.Request
	}
	return ""
}

func (x *QuestionSearchReqBody) GetReadability() bool {
	if x != nil {
		return x.Readability
	}
	return false
}

func (x *QuestionSearchReqBody) GetReturnFormat() string {
	if x != nil {
		return x.ReturnFormat
	}
	return ""
}

func (x *QuestionSearchReqBody) GetCustomExt() string {
	if x != nil {
		return x.CustomExt
	}
	return ""
}

func (x *QuestionSearchReqBody) GetWithFavicon() bool {
	if x != nil {
		return x.WithFavicon
	}
	return false
}

func (x *QuestionSearchReqBody) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

func (x *QuestionSearchReqBody) GetEnableImageCache() bool {
	if x != nil {
		return x.EnableImageCache
	}
	return false
}

func (x *QuestionSearchReqBody) GetWithReExtractor() bool {
	if x != nil {
		return x.WithReExtractor
	}
	return false
}

func (x *QuestionSearchReqBody) GetWithReAdapter() bool {
	if x != nil {
		return x.WithReAdapter
	}
	return false
}

func (x *QuestionSearchReqBody) GetNocache() bool {
	if x != nil {
		return x.Nocache
	}
	return false
}

// 问题搜索返回信息
type QuestionSearchRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 抓取结果信息列表
	ResInfos []*CrawlResInfo `protobuf:"bytes,1,rep,name=res_infos,json=resInfos,proto3" json:"res_infos,omitempty"`
	// 抓取总数量
	TotalUrls int64 `protobuf:"varint,2,opt,name=total_urls,json=totalUrls,proto3" json:"total_urls,omitempty"`
	// 抓取成功的数量
	SuccessUrls int64 `protobuf:"varint,3,opt,name=success_urls,json=successUrls,proto3" json:"success_urls,omitempty"`
	// 抓取失败的数量
	FailureUrls int64 `protobuf:"varint,4,opt,name=failure_urls,json=failureUrls,proto3" json:"failure_urls,omitempty"`
}

func (x *QuestionSearchRes) Reset() {
	*x = QuestionSearchRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_expert_expert_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionSearchRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionSearchRes) ProtoMessage() {}

func (x *QuestionSearchRes) ProtoReflect() protoreflect.Message {
	mi := &file_idl_expert_expert_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionSearchRes.ProtoReflect.Descriptor instead.
func (*QuestionSearchRes) Descriptor() ([]byte, []int) {
	return file_idl_expert_expert_proto_rawDescGZIP(), []int{3}
}

func (x *QuestionSearchRes) GetResInfos() []*CrawlResInfo {
	if x != nil {
		return x.ResInfos
	}
	return nil
}

func (x *QuestionSearchRes) GetTotalUrls() int64 {
	if x != nil {
		return x.TotalUrls
	}
	return 0
}

func (x *QuestionSearchRes) GetSuccessUrls() int64 {
	if x != nil {
		return x.SuccessUrls
	}
	return 0
}

func (x *QuestionSearchRes) GetFailureUrls() int64 {
	if x != nil {
		return x.FailureUrls
	}
	return 0
}

// 抓取结果信息
type CrawlResInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 请求 URI 资源返回的状态码
	Code errs.Biz_Code `protobuf:"varint,1,opt,name=code,proto3,enum=biz.errs.Biz_Code" json:"code,omitempty"`
	// ?请求 URI 资源失败的错误信息
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	// 要抓取的 URI 资源
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	// 实际抓取的 URI 资源
	DestUrl string `protobuf:"bytes,4,opt,name=dest_url,json=destUrl,proto3" json:"dest_url,omitempty"`
	// 抓取的结果内容。如果请求传入 readability=true，返回提炼的主要内容
	Content string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	// 抽取的Resource
	Resources []*CrawlResInfo_Resource `protobuf:"bytes,6,rep,name=resources,proto3" json:"resources,omitempty"`
	// ?抓取结果的额外内容
	Metadata *CrawlResInfo_Metadata `protobuf:"bytes,7,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// ?抓取资源返回的状态码
	Status int64 `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CrawlResInfo) Reset() {
	*x = CrawlResInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_expert_expert_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrawlResInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrawlResInfo) ProtoMessage() {}

func (x *CrawlResInfo) ProtoReflect() protoreflect.Message {
	mi := &file_idl_expert_expert_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrawlResInfo.ProtoReflect.Descriptor instead.
func (*CrawlResInfo) Descriptor() ([]byte, []int) {
	return file_idl_expert_expert_proto_rawDescGZIP(), []int{4}
}

func (x *CrawlResInfo) GetCode() errs.Biz_Code {
	if x != nil {
		return x.Code
	}
	return errs.Biz_Code(0)
}

func (x *CrawlResInfo) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CrawlResInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CrawlResInfo) GetDestUrl() string {
	if x != nil {
		return x.DestUrl
	}
	return ""
}

func (x *CrawlResInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CrawlResInfo) GetResources() []*CrawlResInfo_Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *CrawlResInfo) GetMetadata() *CrawlResInfo_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CrawlResInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 抽取的Resource信息
type CrawlResInfo_Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 生成的图片对应的Key(image-idx)
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// 生成的图片oss对应的Key(去参后md5)
	ObjectKey string `protobuf:"bytes,2,opt,name=object_key,json=objectKey,proto3" json:"object_key,omitempty"`
	// 替换后的链接（内链）
	Src string `protobuf:"bytes,3,opt,name=src,proto3" json:"src,omitempty"`
	// 替换文本
	Alt string `protobuf:"bytes,4,opt,name=alt,proto3" json:"alt,omitempty"`
	// 原链接
	OriginSrc string `protobuf:"bytes,5,opt,name=origin_src,json=originSrc,proto3" json:"origin_src,omitempty"`
	// 替换后的链接（外链）
	ExportSrc string `protobuf:"bytes,6,opt,name=export_src,json=exportSrc,proto3" json:"export_src,omitempty"`
}

func (x *CrawlResInfo_Resource) Reset() {
	*x = CrawlResInfo_Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_expert_expert_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrawlResInfo_Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrawlResInfo_Resource) ProtoMessage() {}

func (x *CrawlResInfo_Resource) ProtoReflect() protoreflect.Message {
	mi := &file_idl_expert_expert_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrawlResInfo_Resource.ProtoReflect.Descriptor instead.
func (*CrawlResInfo_Resource) Descriptor() ([]byte, []int) {
	return file_idl_expert_expert_proto_rawDescGZIP(), []int{4, 0}
}

func (x *CrawlResInfo_Resource) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CrawlResInfo_Resource) GetObjectKey() string {
	if x != nil {
		return x.ObjectKey
	}
	return ""
}

func (x *CrawlResInfo_Resource) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *CrawlResInfo_Resource) GetAlt() string {
	if x != nil {
		return x.Alt
	}
	return ""
}

func (x *CrawlResInfo_Resource) GetOriginSrc() string {
	if x != nil {
		return x.OriginSrc
	}
	return ""
}

func (x *CrawlResInfo_Resource) GetExportSrc() string {
	if x != nil {
		return x.ExportSrc
	}
	return ""
}

// 抓取结果的额外内容信息
type CrawlResInfo_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ?如果请求传入 readability=true，返回提炼的标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// ?返回网页的 favicon
	Favicon string `protobuf:"bytes,2,opt,name=favicon,proto3" json:"favicon,omitempty"`
}

func (x *CrawlResInfo_Metadata) Reset() {
	*x = CrawlResInfo_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_expert_expert_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrawlResInfo_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrawlResInfo_Metadata) ProtoMessage() {}

func (x *CrawlResInfo_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_idl_expert_expert_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrawlResInfo_Metadata.ProtoReflect.Descriptor instead.
func (*CrawlResInfo_Metadata) Descriptor() ([]byte, []int) {
	return file_idl_expert_expert_proto_rawDescGZIP(), []int{4, 1}
}

func (x *CrawlResInfo_Metadata) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CrawlResInfo_Metadata) GetFavicon() string {
	if x != nil {
		return x.Favicon
	}
	return ""
}

var File_idl_expert_expert_proto protoreflect.FileDescriptor

var file_idl_expert_expert_proto_rawDesc = []byte{
	0x0a, 0x17, 0x69, 0x64, 0x6c, 0x2f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x74, 0x2f, 0x65, 0x78, 0x70,
	0x65, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x61, 0x70, 0x69, 0x2e, 0x65,
	0x78, 0x70, 0x65, 0x72, 0x74, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x17, 0x69, 0x64, 0x6c, 0x2f, 0x65, 0x72, 0x72, 0x73, 0x2f, 0x62, 0x69, 0x7a, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x22, 0x0a, 0x0c, 0x48, 0x65, 0x6c,
	0x6c, 0x6f, 0x52, 0x65, 0x71, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x24, 0x0a,
	0x08, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0xad, 0x04, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x61,
	0x64, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x72, 0x65, 0x61, 0x64, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x65, 0x78, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x78, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x66, 0x61, 0x76, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x46, 0x61, 0x76, 0x69, 0x63,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x5f,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x77, 0x69, 0x74, 0x68, 0x52, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x26, 0x0a, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x5f, 0x61, 0x64, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x52,
	0x65, 0x41, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x6f, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x22, 0x54, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a,
	0x0f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x54, 0x54, 0x50, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x43, 0x48, 0x52, 0x4f, 0x4d, 0x45, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x4d, 0x41, 0x52,
	0x54, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x44, 0x46, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06,
	0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x64, 0x22, 0x59, 0x0a, 0x0c, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x52, 0x41, 0x57, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x4c, 0x41, 0x49, 0x4e, 0x10, 0x02,
	0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x41, 0x52, 0x4b, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x03, 0x12, 0x13,
	0x0a, 0x0f, 0x4d, 0x41, 0x52, 0x4b, 0x44, 0x4f, 0x57, 0x4e, 0x5f, 0x4c, 0x49, 0x4e, 0x47, 0x58,
	0x49, 0x10, 0x04, 0x22, 0xaf, 0x01, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x72, 0x65, 0x73,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x74, 0x2e, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x52,
	0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x55, 0x72,
	0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x55, 0x72, 0x6c, 0x73, 0x22, 0x83, 0x04, 0x0a, 0x0c, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x52,
	0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x65, 0x72, 0x72, 0x73, 0x2e,
	0x42, 0x69, 0x7a, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x74, 0x2e, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x52, 0x65, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x74, 0x2e, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x52, 0x65, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a,
	0x9d, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x72, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x6c,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x72, 0x63, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x53, 0x72, 0x63,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x72, 0x63, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x72, 0x63, 0x1a,
	0x3a, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x76, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x76, 0x69, 0x63, 0x6f, 0x6e, 0x32, 0x9c, 0x01, 0x0a, 0x0d,
	0x45, 0x78, 0x70, 0x65, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a,
	0x0e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x42, 0x6f,
	0x64, 0x79, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x74, 0x2e,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x12, 0x37, 0x0a, 0x05, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x74, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71,
	0x42, 0x6f, 0x64, 0x79, 0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72,
	0x74, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x73, 0x42, 0x1c, 0x5a, 0x1a, 0x6b, 0x64,
	0x65, 0x6d, 0x6f, 0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_idl_expert_expert_proto_rawDescOnce sync.Once
	file_idl_expert_expert_proto_rawDescData = file_idl_expert_expert_proto_rawDesc
)

func file_idl_expert_expert_proto_rawDescGZIP() []byte {
	file_idl_expert_expert_proto_rawDescOnce.Do(func() {
		file_idl_expert_expert_proto_rawDescData = protoimpl.X.CompressGZIP(file_idl_expert_expert_proto_rawDescData)
	})
	return file_idl_expert_expert_proto_rawDescData
}

var file_idl_expert_expert_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_idl_expert_expert_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_idl_expert_expert_proto_goTypes = []interface{}{
	(QuestionSearchReqBody_Request)(0),      // 0: api.expert.QuestionSearchReqBody.Request
	(QuestionSearchReqBody_ReturnFormat)(0), // 1: api.expert.QuestionSearchReqBody.ReturnFormat
	(*HelloReqBody)(nil),                    // 2: api.expert.HelloReqBody
	(*HelloRes)(nil),                        // 3: api.expert.HelloRes
	(*QuestionSearchReqBody)(nil),           // 4: api.expert.QuestionSearchReqBody
	(*QuestionSearchRes)(nil),               // 5: api.expert.QuestionSearchRes
	(*CrawlResInfo)(nil),                    // 6: api.expert.CrawlResInfo
	(*CrawlResInfo_Resource)(nil),           // 7: api.expert.CrawlResInfo.Resource
	(*CrawlResInfo_Metadata)(nil),           // 8: api.expert.CrawlResInfo.Metadata
	(errs.Biz_Code)(0),                      // 9: biz.errs.Biz.Code
}
var file_idl_expert_expert_proto_depIdxs = []int32{
	6, // 0: api.expert.QuestionSearchRes.res_infos:type_name -> api.expert.CrawlResInfo
	9, // 1: api.expert.CrawlResInfo.code:type_name -> biz.errs.Biz.Code
	7, // 2: api.expert.CrawlResInfo.resources:type_name -> api.expert.CrawlResInfo.Resource
	8, // 3: api.expert.CrawlResInfo.metadata:type_name -> api.expert.CrawlResInfo.Metadata
	4, // 4: api.expert.ExpertService.QuestionSearch:input_type -> api.expert.QuestionSearchReqBody
	2, // 5: api.expert.ExpertService.Hello:input_type -> api.expert.HelloReqBody
	5, // 6: api.expert.ExpertService.QuestionSearch:output_type -> api.expert.QuestionSearchRes
	3, // 7: api.expert.ExpertService.Hello:output_type -> api.expert.HelloRes
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_idl_expert_expert_proto_init() }
func file_idl_expert_expert_proto_init() {
	if File_idl_expert_expert_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_idl_expert_expert_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloReqBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_expert_expert_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_expert_expert_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionSearchReqBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_expert_expert_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionSearchRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_expert_expert_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrawlResInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_expert_expert_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrawlResInfo_Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_expert_expert_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrawlResInfo_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_idl_expert_expert_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_idl_expert_expert_proto_goTypes,
		DependencyIndexes: file_idl_expert_expert_proto_depIdxs,
		EnumInfos:         file_idl_expert_expert_proto_enumTypes,
		MessageInfos:      file_idl_expert_expert_proto_msgTypes,
	}.Build()
	File_idl_expert_expert_proto = out.File
	file_idl_expert_expert_proto_rawDesc = nil
	file_idl_expert_expert_proto_goTypes = nil
	file_idl_expert_expert_proto_depIdxs = nil
}

var _ context.Context

// Code generated by Kitex v0.12.1. DO NOT EDIT.

type ExpertService interface {
	QuestionSearch(ctx context.Context, req *QuestionSearchReqBody) (res *QuestionSearchRes, err error)
	Hello(ctx context.Context, req *HelloReqBody) (res *HelloRes, err error)
}
