syntax = "proto3";

package api.expert;

import "google/protobuf/any.proto";

option go_package = "/api/expert";

// 【AI】专家模块
service ExpertService {
    // 问题搜索
    rpc QuestionSearch(QuestionSearchReqBody) returns (QuestionSearchRes) {
        option (api.post) = "/expert/question/search";
    }
    // Hello
    rpc Hello(HelloReqBody) returns (HelloRes) {
        option (api.get) = "/expert/hello";
    }
}

// 抓取网页来采集数据请求信息
message CrawlReqBody {
    // 要抓取的 URI 资源
    string url = 1 [(api.body) = "url"];

    // 要执行请求的类型枚举值
    enum Request {
        // 未知
        UNKNOWN_REQUEST = 0;
        // 使用 http client 执行请求
        HTTP = 1;
        // 使用 chrome 执行请求
        CHROME = 2;
        // 由服务来判断执行请求的类型
        SMART = 3;
        // 按照PDF格式执行请求
	    PDF = 4;
        // 自定义请求类型
        CUSTOM = 100;
    }

    // ?要执行请求的类型，默认值是 http
    string request = 2;
    // ?提炼可读性内容，仅支持 return_format=plain 的场景，默认值是 false
    bool readability = 3 [(api.body) = "readability"];

    // 返回结果内容的格式枚举值
    enum ReturnFormat {
        // 未知
        UNKNOWN_FORMAT = 0;
        // 网站原始返回格式
        RAW = 1;
        // 纯文本格式
        PLAIN = 2;
        // markdown
        MARKDOWN = 3;
        // markdown_lingxi
        MARKDOWN_LINGXI = 4;
    }

    // ?返回结果内容的格式，默认值是 raw
    string return_format = 4;
    // ?自定义请求类型的额外参数
    string custom_ext = 5;
    // ?是否返回网站的 favicon，默认值是 false
    bool with_favicon = 6;

    // 要抓取的 URI 资源数组，和 url 参数二选一，数量上限是30
    repeated string urls = 7;
    // ?是否缓存图片至OSS，默认值是 false
    bool enable_image_cache = 8;
    // ?是否使用新的提取器，默认值是 false
    bool with_re_extractor = 9;
    // ?是否使用新的适配器，默认值是 false
    bool with_re_adapter = 10;
    // ?是否不读缓存结果，默认值是false
    bool nocache = 11;
}

// 抓取网页来采集数据返回信息
message CrawlRes {
    // 抓取结果信息列表
    repeated CrawlResInfo res_infos = 1;
    // 抓取总数量
    int64 total_urls = 2;
    // 抓取成功的数量
    int64 success_urls = 3;
    // 抓取失败的数量
    int64 failure_urls = 4;
}

message CrawlFieldsReqBody {
    // 要抓取的 URI 资源
    string url = 1 [(api.body) = "url,required"];
    // ?要执行请求的类型，默认值是 http
    string request = 2;
}

message CrawlFieldsRes {
    // 抓取结果信息列表
    repeated CrawlFieldsResInfo res_infos = 1;
}

// 抓取结果信息
message CrawlResInfo {
    // 请求 URI 资源返回的状态码
    biz.errs.Biz.Code code = 1;
    // ?请求 URI 资源失败的错误信息
    string msg = 2;
    // 要抓取的 URI 资源 
    string url = 3;
    // 实际抓取的 URI 资源
    string dest_url = 4;
    // 抓取的结果内容。如果请求传入 readability=true，返回提炼的主要内容
    string content = 5;

    // 抽取的Resource信息
    message Resource {
        // 生成的图片对应的Key(image-idx)
        string key = 1;
        // 生成的图片oss对应的Key(去参后md5)
        string object_key = 2;
        // 替换后的链接（内链）
        string src = 3;
        // 替换文本
        string alt = 4;
        // 原链接
        string origin_src = 5;
        // 替换后的链接（外链）
        string export_src = 6;
    }

    // 抽取的Resource
    repeated Resource resources = 6;
    
    // 抓取结果的额外内容信息
    message Metadata {
        // ?如果请求传入 readability=true，返回提炼的标题
        string title = 1;
        // ?返回网页的 favicon
        string favicon = 2;
    }

    // ?抓取结果的额外内容
    Metadata metadata = 7;
    // ?抓取资源返回的状态码
    int64 status = 8;
}

// 抓取字段结果信息
message CrawlFieldsResInfo {
    // 请求 URI 资源返回的状态码
    biz.errs.Biz.Code code = 1;
    // ?请求 URI 资源失败的错误信息
    string msg = 2;
    // 要抓取的 URI 资源 
    string url = 3;
    // 字段分类
    string category = 4;
    // 字段内容
    google.protobuf.Any fields_info = 5 [json_name = "fields_info"];
}

// 抓取字段结果信息 - 小红书分类
// See https://365.kdocs.cn/l/clilXweLArcj.
message XhsFieldsInfo {
    message User {
        // 用户ID
        string id = 1;
        // 用户昵称
        string nickname = 2;
        // 用户头像
        string avatar = 3;
    }

    // 笔记连接
    string link = 1;
    // 查询时间
    int64 time = 2;
    // 用户信息
    User user = 3;
    // 笔记标题
    string title = 4;
    // 笔记内容
    string desc = 5;
    // 话题
    repeated string topics = 6;
    // 最后更新时间
    int64 last_update_time = 7 [json_name="last_update_time"];
    // IP地址
    string ip_location = 8 [json_name="ip_location"];
    // 点赞数
    string liked_count = 9 [json_name="liked_count"];
    // 收藏数
    string collected_count = 10 [json_name="collected_count"];
    // 评论数
    string comment_count = 11 [json_name="comment_count"];


}

// 文本相似度计算请求信息
message SimiliarityReqBody {
    // 要比较的文本内容
    string text1 = 1 [(api.body) = "text1,required"];
    // 要比较的文本内容
    string text2 = 2 [(api.body) = "text2,required"];
}

// 文本相似度计算返回信息
message SimiliarityRes {
    // 相似性指数（0 至 1 之间）
    float index = 1;
}


// 自定义抓取请求
message CustomExtractReqBody {
    // 要抓取的 URI 资源 
    string url = 1;
    // 要执行请求的类型，默认值是 http
    string request = 2;
}

// 自定义抓取返回
message CustomExtractRes {
    // 抓取结果信息列表
    repeated CustomExtractResInfo res_infos = 1;
}


// 自定义抓取返回
message CustomExtractResInfo {
    // 请求 URI 资源返回的状态码
    biz.errs.Biz.Code code = 1;
    // ?请求 URI 资源失败的错误信息
    string msg = 2;
    // 要抓取的 URI 资源 
    string url = 3;
    // 字段内容
    google.protobuf.Any res = 5 [json_name = "res"];
}
